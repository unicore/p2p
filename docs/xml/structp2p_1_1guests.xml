<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structp2p_1_1guests" kind="struct" language="C++" prot="public">
    <compoundname>p2p::guests</compoundname>
    <includes refid="p2p_8hpp" local="no">p2p.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structp2p_1_1guests_1a2063eb8b622bad86da024019a9be0996" prot="public" static="no" mutable="no">
        <type>eosio::name</type>
        <definition>eosio::name p2p::guests::username</definition>
        <argsstring></argsstring>
        <name>username</name>
        <qualifiedname>p2p::guests::username</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="p2p.hpp" line="362" column="21" bodyfile="p2p.hpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structp2p_1_1guests_1a7d81b8f733dfeea21966a8a31edb301d" prot="public" static="no" mutable="no">
        <type>eosio::name</type>
        <definition>eosio::name p2p::guests::registrator</definition>
        <argsstring></argsstring>
        <name>registrator</name>
        <qualifiedname>p2p::guests::registrator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="p2p.hpp" line="364" column="21" bodyfile="p2p.hpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structp2p_1_1guests_1a4b73f584111d94b3a6fb5622d8216ed3" prot="public" static="no" mutable="no">
        <type>eosio::public_key</type>
        <definition>eosio::public_key p2p::guests::public_key</definition>
        <argsstring></argsstring>
        <name>public_key</name>
        <qualifiedname>p2p::guests::public_key</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="p2p.hpp" line="365" column="27" bodyfile="p2p.hpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structp2p_1_1guests_1a09bbcdc724ea96a5cdf347367b4f7041" prot="public" static="no" mutable="no">
        <type>eosio::asset</type>
        <definition>eosio::asset p2p::guests::cpu</definition>
        <argsstring></argsstring>
        <name>cpu</name>
        <qualifiedname>p2p::guests::cpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="p2p.hpp" line="366" column="22" bodyfile="p2p.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structp2p_1_1guests_1aff18f2163f3b24aea4575794e55425b4" prot="public" static="no" mutable="no">
        <type>eosio::asset</type>
        <definition>eosio::asset p2p::guests::net</definition>
        <argsstring></argsstring>
        <name>net</name>
        <qualifiedname>p2p::guests::net</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="p2p.hpp" line="367" column="22" bodyfile="p2p.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structp2p_1_1guests_1a395b94e26a5cfdd479d740f626f12180" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool p2p::guests::set_referer</definition>
        <argsstring></argsstring>
        <name>set_referer</name>
        <qualifiedname>p2p::guests::set_referer</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="p2p.hpp" line="368" column="14" bodyfile="p2p.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structp2p_1_1guests_1ad45fc1ab56a406b0459e2800370b35e1" prot="public" static="no" mutable="no">
        <type>eosio::time_point_sec</type>
        <definition>eosio::time_point_sec p2p::guests::expiration</definition>
        <argsstring></argsstring>
        <name>expiration</name>
        <qualifiedname>p2p::guests::expiration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="p2p.hpp" line="369" column="31" bodyfile="p2p.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structp2p_1_1guests_1ac8da955e150475f48c17508b45c097c9" prot="public" static="no" mutable="no">
        <type>eosio::asset</type>
        <definition>eosio::asset p2p::guests::to_pay</definition>
        <argsstring></argsstring>
        <name>to_pay</name>
        <qualifiedname>p2p::guests::to_pay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="p2p.hpp" line="371" column="22" bodyfile="p2p.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structp2p_1_1guests_1a7ea0e0b2c54e710ecda2895b9ba1d4c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t p2p::guests::primary_key</definition>
        <argsstring>() const</argsstring>
        <name>primary_key</name>
        <qualifiedname>p2p::guests::primary_key</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="p2p.hpp" line="373" column="18" bodyfile="p2p.hpp" bodystart="373" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="structp2p_1_1guests_1ab0bd423df57e4e4cb8c037f3b8d19975" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t p2p::guests::byexpr</definition>
        <argsstring>() const</argsstring>
        <name>byexpr</name>
        <qualifiedname>p2p::guests::byexpr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="p2p.hpp" line="374" column="18" bodyfile="p2p.hpp" bodystart="374" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="structp2p_1_1guests_1ae7c6e94ea3fb3000bca7512ff94b9d4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t p2p::guests::byreg</definition>
        <argsstring>() const</argsstring>
        <name>byreg</name>
        <qualifiedname>p2p::guests::byreg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="p2p.hpp" line="375" column="18" bodyfile="p2p.hpp" bodystart="375" bodyend="375"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Таблица доступа к записям гостей платформы </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Table: guests</title><para></para>
</simplesect>
<simplesect kind="par"><title>Contract: _REGISTRATOR_ACCOUNT</title><para></para>
</simplesect>
<simplesect kind="par"><title>Scope: _REGISTRATOR_ACCOUNT</title><para></para>
</simplesect>
Таблица находится на контракте registrator и используется для проверки необходимости выкупа аккаунта пользователя, если его покупка у _CORE_SALE_ACCOUNT больше, чем _GIFT_ACCOUNT_FROM_AMOUNT. Если пользователю полагается подарочный аккаунт, то контракт <ref refid="classp2p" kindref="compound">p2p</ref> совершает его выкуп для пользователя из числа токенов бонусного баланса контракта. </para>
    </detaileddescription>
    <location file="p2p.hpp" line="361" column="5" bodyfile="p2p.hpp" bodystart="361" bodyend="378"/>
    <listofallmembers>
      <member refid="structp2p_1_1guests_1ab0bd423df57e4e4cb8c037f3b8d19975" prot="public" virt="non-virtual"><scope>p2p::guests</scope><name>byexpr</name></member>
      <member refid="structp2p_1_1guests_1ae7c6e94ea3fb3000bca7512ff94b9d4d" prot="public" virt="non-virtual"><scope>p2p::guests</scope><name>byreg</name></member>
      <member refid="structp2p_1_1guests_1a09bbcdc724ea96a5cdf347367b4f7041" prot="public" virt="non-virtual"><scope>p2p::guests</scope><name>cpu</name></member>
      <member refid="structp2p_1_1guests_1ad45fc1ab56a406b0459e2800370b35e1" prot="public" virt="non-virtual"><scope>p2p::guests</scope><name>expiration</name></member>
      <member refid="structp2p_1_1guests_1aff18f2163f3b24aea4575794e55425b4" prot="public" virt="non-virtual"><scope>p2p::guests</scope><name>net</name></member>
      <member refid="structp2p_1_1guests_1a7ea0e0b2c54e710ecda2895b9ba1d4c9" prot="public" virt="non-virtual"><scope>p2p::guests</scope><name>primary_key</name></member>
      <member refid="structp2p_1_1guests_1a4b73f584111d94b3a6fb5622d8216ed3" prot="public" virt="non-virtual"><scope>p2p::guests</scope><name>public_key</name></member>
      <member refid="structp2p_1_1guests_1a7d81b8f733dfeea21966a8a31edb301d" prot="public" virt="non-virtual"><scope>p2p::guests</scope><name>registrator</name></member>
      <member refid="structp2p_1_1guests_1a395b94e26a5cfdd479d740f626f12180" prot="public" virt="non-virtual"><scope>p2p::guests</scope><name>set_referer</name></member>
      <member refid="structp2p_1_1guests_1ac8da955e150475f48c17508b45c097c9" prot="public" virt="non-virtual"><scope>p2p::guests</scope><name>to_pay</name></member>
      <member refid="structp2p_1_1guests_1a2063eb8b622bad86da024019a9be0996" prot="public" virt="non-virtual"><scope>p2p::guests</scope><name>username</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
